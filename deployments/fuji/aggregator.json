{
  "address": "0x745812091D758375d46476F08aF706BF6c975ED9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pairRouter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stableRouter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address[][]",
          "name": "path",
          "type": "address[][]"
        },
        {
          "internalType": "uint256[]",
          "name": "routerId",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountInMax",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "multiSwapETHForExactTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[][]",
          "name": "path",
          "type": "address[][]"
        },
        {
          "internalType": "uint256[]",
          "name": "routerId",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "multiSwapExactETHForTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[][]",
          "name": "path",
          "type": "address[][]"
        },
        {
          "internalType": "uint256[]",
          "name": "routerId",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "multiSwapExactTokensForETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[][]",
          "name": "path",
          "type": "address[][]"
        },
        {
          "internalType": "uint256[]",
          "name": "routerId",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "multiSwapExactTokensForTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[][]",
          "name": "path",
          "type": "address[][]"
        },
        {
          "internalType": "uint256[]",
          "name": "routerId",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountInMax",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "multiSwapTokensForExactETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[][]",
          "name": "path",
          "type": "address[][]"
        },
        {
          "internalType": "uint256[]",
          "name": "routerId",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountInMax",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "multiSwapTokensForExactTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pairRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stableRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x7bcb9371c90b020a7ef1066105a522bada4816fb03be766e6e2eda9f77942665",
  "receipt": {
    "to": null,
    "from": "0x10E38dFfFCfdBaaf590D5A9958B01C9cfcF6A63B",
    "contractAddress": "0x745812091D758375d46476F08aF706BF6c975ED9",
    "transactionIndex": 0,
    "gasUsed": "4511525",
    "logsBloom": "0x
    "blockHash": "0xb7f87948693dae0b26077c37677306c015a5d6dc0bbb2f191bf634d8de682da1",
    "transactionHash": "0x7bcb9371c90b020a7ef1066105a522bada4816fb03be766e6e2eda9f77942665",
    "logs": [],
    "blockNumber": 2335554,
    "cumulativeGasUsed": "4511525",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x2a90276992ddC21C3585FE50f5B43D0Cf62aDe03",
    "0x9067e2C2bf8531283AB97C34EaA74599E0004842"
  ],
  "solcInputHash": "a9a37b621715f35f60317a16dccb6e72",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pairRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stableRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address[][]\",\"name\":\"path\",\"type\":\"address[][]\"},{\"internalType\":\"uint256[]\",\"name\":\"routerId\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"multiSwapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[][]\",\"name\":\"path\",\"type\":\"address[][]\"},{\"internalType\":\"uint256[]\",\"name\":\"routerId\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"multiSwapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[][]\",\"name\":\"path\",\"type\":\"address[][]\"},{\"internalType\":\"uint256[]\",\"name\":\"routerId\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"multiSwapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[][]\",\"name\":\"path\",\"type\":\"address[][]\"},{\"internalType\":\"uint256[]\",\"name\":\"routerId\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"multiSwapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[][]\",\"name\":\"path\",\"type\":\"address[][]\"},{\"internalType\":\"uint256[]\",\"name\":\"routerId\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"multiSwapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[][]\",\"name\":\"path\",\"type\":\"address[][]\"},{\"internalType\":\"uint256[]\",\"name\":\"routerId\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"multiSwapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pairRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RequiemAggregator.sol\":\"RequiemAggregator\"},\"evmVersion\":\"istanbul\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/RequiemAggregator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\nimport \\\"./interfaces/IRequiemRouter02.sol\\\";\\nimport \\\"./interfaces/IRequiemStableSwap.sol\\\";\\nimport \\\"./interfaces/IERC20.sol\\\";\\nimport \\\"./interfaces/IWETH.sol\\\";\\nimport \\\"./libraries/TransferHelper.sol\\\";\\n\\ncontract RequiemAggregator {\\n    address public immutable pairRouter;\\n    address public immutable stableRouter;\\n\\n    constructor(address _pairRouter, address _stableRouter) {\\n        pairRouter = _pairRouter;\\n        stableRouter = _stableRouter;\\n    }\\n\\n    // standard forward swap function\\n    // - in each step the previous output amount is used for the input\\n    function multiSwapExactTokensForTokens(\\n        address[][] calldata path,\\n        uint256[] memory routerId,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        uint256 deadline\\n    ) external payable returns (uint256) {\\n        IERC20(path[0][0]).transferFrom(msg.sender, address(this), amountIn);\\n        uint256 outAmount = amountIn;\\n        for (uint256 i = 0; i < routerId.length; i++) {\\n            if (routerId[i] == 0) {\\n                IERC20(path[i][0]).approve(stableRouter, outAmount);\\n                uint8 inIndex = IRequiemStableSwap(stableRouter).getTokenIndex(\\n                    path[i][0]\\n                );\\n                uint8 outIndex = IRequiemStableSwap(stableRouter).getTokenIndex(\\n                    path[i][1]\\n                );\\n                outAmount = IRequiemStableSwap(stableRouter).swap(\\n                    inIndex,\\n                    outIndex,\\n                    outAmount,\\n                    i < routerId.length - 1 ? 0 : amountOutMin,\\n                    deadline\\n                );\\n            } else {\\n                IERC20(path[i][0]).approve(pairRouter, outAmount);\\n                uint256[] memory amounts = IRequiemRouter02(pairRouter)\\n                    .swapExactTokensForTokens(\\n                        outAmount,\\n                        i < routerId.length - 1 ? 0 : amountOutMin,\\n                        path[i],\\n                        address(this),\\n                        deadline\\n                    );\\n                outAmount = amounts[amounts.length - 1];\\n            }\\n        }\\n\\n        IERC20(path[path.length - 1][path[path.length - 1].length - 1])\\n            .transfer(msg.sender, outAmount);\\n        return outAmount;\\n    }\\n\\n    // classic swap tokens for exact tokens function\\n    // - first calculating the input amounts\\n    // - then forward swapping\\n    function multiSwapTokensForExactTokens(\\n        address[][] calldata path,\\n        uint256[] memory routerId,\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        uint256 deadline\\n    ) external payable returns (uint256) {\\n        uint256[] memory connectingAmounts = new uint256[](path.length);\\n        // calculate amounts\\n        uint256 outAmount = amountOut;\\n        for (uint256 i = routerId.length; i > 0; i--) {\\n            if (routerId[i - 1] == 0) {\\n                uint8 inIndex = IRequiemStableSwap(stableRouter).getTokenIndex(\\n                    path[i - 1][1]\\n                );\\n                uint8 outIndex = IRequiemStableSwap(stableRouter).getTokenIndex(\\n                    path[i - 1][0]\\n                );\\n                outAmount = IRequiemStableSwap(stableRouter).calculateSwap(\\n                    inIndex,\\n                    outIndex,\\n                    outAmount\\n                );\\n                connectingAmounts[i - 1] = outAmount;\\n            } else {\\n                uint256[] memory amountsIn = IRequiemRouter02(pairRouter)\\n                    .getAmountsIn(outAmount, path[i - 1]);\\n                connectingAmounts[i - 1] = amountsIn[0];\\n            }\\n        }\\n        require(connectingAmounts[0] <= amountInMax, \\\"INSUFFICIENT_INPUT\\\");\\n        // then forward swap\\n        IERC20(path[0][0]).transferFrom(\\n            msg.sender,\\n            address(this),\\n            connectingAmounts[0]\\n        );\\n        for (uint256 i = 0; i < routerId.length; i++) {\\n            if (routerId[i] == 0) {\\n                IERC20(path[i][0]).approve(stableRouter, connectingAmounts[0]);\\n                uint8 inIndex = IRequiemStableSwap(stableRouter).getTokenIndex(\\n                    path[i][0]\\n                );\\n                uint8 outIndex = IRequiemStableSwap(stableRouter).getTokenIndex(\\n                    path[i][1]\\n                );\\n                IRequiemStableSwap(stableRouter).swap(\\n                    inIndex,\\n                    outIndex,\\n                    connectingAmounts[i],\\n                    0,\\n                    deadline\\n                );\\n            } else {\\n                IERC20(path[i][0]).approve(pairRouter, connectingAmounts[i]);\\n                IRequiemRouter02(pairRouter).swapExactTokensForTokens(\\n                    connectingAmounts[i],\\n                    0,\\n                    path[i],\\n                    address(this),\\n                    deadline\\n                );\\n            }\\n        }\\n\\n        IERC20(path[path.length - 1][path[path.length - 1].length - 1])\\n            .transfer(msg.sender, amountOut);\\n        return connectingAmounts[0];\\n    }\\n\\n    // Standard forward swap function using the Network CCY as input\\n    // Here the first action is a WETH deposit\\n    // - in each step the previous output amount is used for the input\\n    function multiSwapExactETHForTokens(\\n        address[][] calldata path,\\n        uint256[] memory routerId,\\n        uint256 amountOutMin,\\n        uint256 deadline\\n    ) external payable returns (uint256) {\\n        uint256[] memory amounts = IRequiemRouter02(pairRouter).getAmountsOut(\\n            msg.value,\\n            path[0]\\n        );\\n        IWETH(IRequiemRouter02(pairRouter).WETH()).deposit{value: amounts[0]}();\\n        IERC20(IRequiemRouter02(pairRouter).WETH()).approve(\\n            pairRouter,\\n            amounts[0]\\n        );\\n        amounts = IRequiemRouter02(pairRouter).swapExactTokensForTokens(\\n            amounts[0],\\n            0,\\n            path[0],\\n            address(this),\\n            deadline\\n        );\\n\\n        uint256 outAmount = amounts[amounts.length - 1];\\n        for (uint8 i = 1; i < routerId.length; i++) {\\n            if (routerId[i] == 0) {\\n                IERC20(path[i][0]).approve(stableRouter, outAmount);\\n                uint8 inIndex = IRequiemStableSwap(stableRouter).getTokenIndex(\\n                    path[i][0]\\n                );\\n                uint8 outIndex = IRequiemStableSwap(stableRouter).getTokenIndex(\\n                    path[i][1]\\n                );\\n                outAmount = IRequiemStableSwap(stableRouter).swap(\\n                    inIndex,\\n                    outIndex,\\n                    outAmount,\\n                    i < routerId.length - 1 ? 0 : amountOutMin,\\n                    deadline\\n                );\\n            } else {\\n                IERC20(path[i][0]).approve(pairRouter, outAmount);\\n                amounts = IRequiemRouter02(pairRouter).swapExactTokensForTokens(\\n                        outAmount,\\n                        i < routerId.length - 1 ? 0 : amountOutMin,\\n                        path[i],\\n                        address(this),\\n                        deadline\\n                    );\\n                outAmount = amounts[amounts.length - 1];\\n            }\\n        }\\n\\n        IERC20(path[path.length - 1][path[path.length - 1].length - 1])\\n            .transfer(msg.sender, outAmount);\\n        return outAmount;\\n    }\\n\\n    // classic swap tokens for exact tokens function\\n    // - first calculating the input amounts\\n    // - then depositing ETHG / receiving WETH\\n    // - then forward swapping\\n    function multiSwapETHForExactTokens(\\n        address[][] calldata path,\\n        uint256[] memory routerId,\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        uint256 deadline\\n    ) external payable returns (uint256) {\\n        uint256[] memory connectingAmounts = new uint256[](path.length);\\n        // calculate amounts\\n        uint256 outAmount = amountOut;\\n        for (uint256 i = routerId.length - 1; i > 0; i++) {\\n            if (routerId[i] == 0) {\\n                uint8 inIndex = IRequiemStableSwap(stableRouter).getTokenIndex(\\n                    path[i][1]\\n                );\\n                uint8 outIndex = IRequiemStableSwap(stableRouter).getTokenIndex(\\n                    path[i][0]\\n                );\\n                outAmount = IRequiemStableSwap(stableRouter).calculateSwap(\\n                    inIndex,\\n                    outIndex,\\n                    outAmount\\n                );\\n                connectingAmounts[i - routerId.length + 1] = outAmount;\\n            } else {\\n                uint256[] memory amountsOut = IRequiemRouter02(pairRouter)\\n                    .getAmountsIn(amountOut, path[i]);\\n                connectingAmounts[i - routerId.length + 1] = amountsOut[\\n                    amountsOut.length - 1\\n                ];\\n            }\\n        }\\n        require(connectingAmounts[0] <= amountInMax, \\\"INSUFFICIENT_INPUT\\\");\\n        // then forward swap, starting with ETH\\n        IWETH(IRequiemRouter02(pairRouter).WETH()).deposit{\\n            value: connectingAmounts[0]\\n        }();\\n        IERC20(IRequiemRouter02(pairRouter).WETH()).approve(\\n            pairRouter,\\n            connectingAmounts[0]\\n        );\\n        IRequiemRouter02(pairRouter).swapExactETHForTokens(\\n            0,\\n            path[0],\\n            address(this),\\n            deadline\\n        );\\n        for (uint256 i = routerId.length - 1; i > 0; i++) {\\n            if (routerId[i] == 0) {\\n                IERC20(path[i][0]).approve(stableRouter, connectingAmounts[0]);\\n                uint8 inIndex = IRequiemStableSwap(stableRouter).getTokenIndex(\\n                    path[i][0]\\n                );\\n                uint8 outIndex = IRequiemStableSwap(stableRouter).getTokenIndex(\\n                    path[i][1]\\n                );\\n                IRequiemStableSwap(stableRouter).swap(\\n                    inIndex,\\n                    outIndex,\\n                    connectingAmounts[i],\\n                    0,\\n                    deadline\\n                );\\n            } else {\\n                IERC20(path[i][0]).approve(pairRouter, connectingAmounts[i]);\\n                IRequiemRouter02(pairRouter).swapExactTokensForTokens(\\n                    connectingAmounts[i],\\n                    0,\\n                    path[i],\\n                    address(this),\\n                    deadline\\n                );\\n            }\\n        }\\n\\n        IERC20(path[path.length - 1][path[path.length - 1].length - 1])\\n            .transfer(msg.sender, amountOut);\\n        return connectingAmounts[0];\\n    }\\n\\n    // standard forward swap function that returns ETH\\n    // - in each step the previous output amount is used for the input\\n    function multiSwapExactTokensForETH(\\n        address[][] calldata path,\\n        uint256[] memory routerId,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        uint256 deadline\\n    ) external payable returns (uint256) {\\n        IERC20(path[0][0]).transferFrom(msg.sender, address(this), amountIn);\\n        uint256 outAmount = amountIn;\\n        for (uint8 i = 0; i < routerId.length; i++) {\\n            if (routerId[i] == 0) {\\n                IERC20(path[i][0]).approve(stableRouter, outAmount);\\n                uint8 inIndex = IRequiemStableSwap(stableRouter).getTokenIndex(\\n                    path[i][0]\\n                );\\n                uint8 outIndex = IRequiemStableSwap(stableRouter).getTokenIndex(\\n                    path[i][1]\\n                );\\n                outAmount = IRequiemStableSwap(stableRouter).swap(\\n                    inIndex,\\n                    outIndex,\\n                    outAmount,\\n                    i < routerId.length - 1 ? 0 : amountOutMin,\\n                    deadline\\n                );\\n            } else {\\n                IERC20(path[i][0]).approve(pairRouter, outAmount);\\n                uint256[] memory amounts = IRequiemRouter02(pairRouter)\\n                    .swapExactTokensForTokens(\\n                        outAmount,\\n                        i < routerId.length - 1 ? 0 : amountOutMin,\\n                        path[i],\\n                        address(this),\\n                        deadline\\n                    );\\n                outAmount = amounts[amounts.length - 1];\\n            }\\n        }\\n    \\n        IWETH(IRequiemRouter02(pairRouter).WETH()).withdraw(outAmount);\\n        TransferHelper.safeTransferETH(msg.sender, outAmount);\\n        return outAmount;\\n    }\\n\\n    // classic swap tokens for exact tokens function\\n    // - first calculating the input amounts\\n    // - then forward swapping\\n    function multiSwapTokensForExactETH(\\n        address[][] calldata path,\\n        uint256[] memory routerId,\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        uint256 deadline\\n    ) external payable returns (uint256) {\\n        uint256[] memory connectingAmounts = new uint256[](path.length);\\n        // calculate amounts\\n        uint256 outAmount = amountOut;\\n        for (uint256 i = routerId.length - 1; i > 0; i++) {\\n            if (routerId[i] == 0) {\\n                uint8 inIndex = IRequiemStableSwap(stableRouter).getTokenIndex(\\n                    path[i][1]\\n                );\\n                uint8 outIndex = IRequiemStableSwap(stableRouter).getTokenIndex(\\n                    path[i][0]\\n                );\\n                outAmount = IRequiemStableSwap(stableRouter).calculateSwap(\\n                    inIndex,\\n                    outIndex,\\n                    outAmount\\n                );\\n                connectingAmounts[i - routerId.length + 1] = outAmount;\\n            } else {\\n                uint256[] memory amountsOut = IRequiemRouter02(pairRouter)\\n                    .getAmountsIn(amountOut, path[i]);\\n                connectingAmounts[i - routerId.length + 1] = amountsOut[\\n                    amountsOut.length - 1\\n                ];\\n            }\\n        }\\n        require(connectingAmounts[0] <= amountInMax, \\\"INSUFFICIENT_INPUT\\\");\\n        // then forward swap\\n        IERC20(path[0][0]).transferFrom(\\n            msg.sender,\\n            address(this),\\n            connectingAmounts[0]\\n        );\\n        for (uint256 i = routerId.length - 1; i > 0; i++) {\\n            if (routerId[i] == 0) {\\n                IERC20(path[i][0]).approve(stableRouter, connectingAmounts[0]);\\n                uint8 inIndex = IRequiemStableSwap(stableRouter).getTokenIndex(\\n                    path[i][0]\\n                );\\n                uint8 outIndex = IRequiemStableSwap(stableRouter).getTokenIndex(\\n                    path[i][1]\\n                );\\n                IRequiemStableSwap(stableRouter).swap(\\n                    inIndex,\\n                    outIndex,\\n                    connectingAmounts[i],\\n                    0,\\n                    deadline\\n                );\\n            } else {\\n                IERC20(path[i][0]).approve(pairRouter, connectingAmounts[i]);\\n                IRequiemRouter02(pairRouter).swapExactTokensForTokens(\\n                    connectingAmounts[i],\\n                    0,\\n                    path[i],\\n                    address(this),\\n                    deadline\\n                );\\n            }\\n        }\\n\\n        IWETH(IRequiemRouter02(pairRouter).WETH()).withdraw(outAmount);\\n        TransferHelper.safeTransferETH(msg.sender, outAmount);\\n        return connectingAmounts[0];\\n    }\\n}\\n\",\"keccak256\":\"0xb594c055e320a983d10c0c5da600ffeae953d9e8a407cf2656a206dd5d0902ff\",\"license\":\"MIT\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\",\"keccak256\":\"0xb55c91551ef864f86edd296378fc3430f19798c0d1de468ff772a83a842df24c\",\"license\":\"MIT\"},\"contracts/interfaces/IRequiemRouter01.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2;\\n\\ninterface IRequiemRouter01 {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETH(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountToken, uint amountETH);\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountToken, uint amountETH);\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapTokensForExactTokens(\\n        uint amountOut,\\n        uint amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n}\\n\",\"keccak256\":\"0x68bc82bec66ed8e8b6e24f794544c66d3494203713df80924346886eec33b4b4\",\"license\":\"MIT\"},\"contracts/interfaces/IRequiemRouter02.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2;\\n\\nimport \\\"./IRequiemRouter01.sol\\\";\\n\\ninterface IRequiemRouter02 is IRequiemRouter01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountETH);\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external payable;\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0xd5795df9e18190298786b5d2fe35647742d900dfadded791652160e73fac2f6c\",\"license\":\"MIT\"},\"contracts/interfaces/IRequiemStableSwap.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.4;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\ninterface IRequiemStableSwap {\\n    /// EVENTS\\n    event AddLiquidity(\\n        address indexed provider,\\n        uint256[] tokenAmounts,\\n        uint256[] fees,\\n        uint256 invariant,\\n        uint256 tokenSupply\\n    );\\n\\n    event TokenExchange(\\n        address indexed buyer,\\n        uint256 soldId,\\n        uint256 tokensSold,\\n        uint256 boughtId,\\n        uint256 tokensBought\\n    );\\n\\n    event RemoveLiquidity(address indexed provider, uint256[] tokenAmounts, uint256[] fees, uint256 tokenSupply);\\n\\n    event RemoveLiquidityOne(address indexed provider, uint256 tokenIndex, uint256 tokenAmount, uint256 coinAmount);\\n\\n    event RemoveLiquidityImbalance(\\n        address indexed provider,\\n        uint256[] tokenAmounts,\\n        uint256[] fees,\\n        uint256 invariant,\\n        uint256 tokenSupply\\n    );\\n\\n    event RampA(uint256 oldA, uint256 newA, uint256 initialTime, uint256 futureTime);\\n\\n    event StopRampA(uint256 A, uint256 timestamp);\\n\\n    event NewFee(uint256 fee, uint256 adminFee, uint256 withdrawFee);\\n\\n    event CollectProtocolFee(address token, uint256 amount);\\n\\n    event FeeControllerChanged(address newController);\\n\\n    event FeeDistributorChanged(address newController);\\n\\n    // pool data view functions\\n    function getLpToken() external view returns (IERC20 lpToken);\\n\\n    function getA() external view returns (uint256);\\n\\n    function getAPrecise() external view returns (uint256);\\n\\n    function getToken(uint8 index) external view returns (IERC20);\\n\\n    function getTokens() external view returns (IERC20[] memory);\\n\\n    function getTokenIndex(address tokenAddress) external view returns (uint8);\\n\\n    function getTokenBalance(uint8 index) external view returns (uint256);\\n\\n    function getTokenBalances() external view returns (uint256[] memory);\\n\\n    function getNumberOfTokens() external view returns (uint256);\\n\\n    function getVirtualPrice() external view returns (uint256);\\n\\n    function calculateTokenAmount(uint256[] calldata amounts, bool deposit) external view returns (uint256);\\n\\n    function calculateSwap(\\n        uint8 tokenIndexFrom,\\n        uint8 tokenIndexTo,\\n        uint256 dx\\n    ) external view returns (uint256);\\n\\n    function calculateRemoveLiquidity(address account, uint256 amount) external view returns (uint256[] memory);\\n\\n    function calculateRemoveLiquidityOneToken(\\n        address account,\\n        uint256 tokenAmount,\\n        uint8 tokenIndex\\n    ) external view returns (uint256 availableTokenAmount);\\n\\n    function getAdminBalances() external view returns (uint256[] memory adminBalances);\\n\\n    function getAdminBalance(uint8 index) external view returns (uint256);\\n\\n    function calculateCurrentWithdrawFee(address account) external view returns (uint256);\\n\\n    // state modifying functions\\n    function swap(\\n        uint8 tokenIndexFrom,\\n        uint8 tokenIndexTo,\\n        uint256 dx,\\n        uint256 minDy,\\n        uint256 deadline\\n    ) external returns (uint256);\\n\\n    function addLiquidity(\\n        uint256[] calldata amounts,\\n        uint256 minToMint,\\n        uint256 deadline\\n    ) external returns (uint256);\\n\\n    function removeLiquidity(\\n        uint256 amount,\\n        uint256[] calldata minAmounts,\\n        uint256 deadline\\n    ) external returns (uint256[] memory);\\n\\n    function removeLiquidityOneToken(\\n        uint256 tokenAmount,\\n        uint8 tokenIndex,\\n        uint256 minAmount,\\n        uint256 deadline\\n    ) external returns (uint256);\\n\\n    function removeLiquidityImbalance(\\n        uint256[] calldata amounts,\\n        uint256 maxBurnAmount,\\n        uint256 deadline\\n    ) external returns (uint256);\\n\\n    function updateUserWithdrawFee(address recipient, uint256 transferAmount) external;\\n}\\n\",\"keccak256\":\"0x121eb6c1c2b8664595b880ebaa7096caf3a4883d65ef8a06a1eee63f83e7a032\",\"license\":\"MIT\"},\"contracts/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface IWETH {\\n    function deposit() external payable;\\n    function transfer(address to, uint value) external returns (bool);\\n    function withdraw(uint) external;\\n    function balanceOf(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xef59a665834027c359d187fc2edda600421a0a2ab0394e7f3e668d97a92af6ec\",\"license\":\"MIT\"},\"contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity >=0.6.0;\\n\\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\\nlibrary TransferHelper {\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            'TransferHelper::safeApprove: approve failed'\\n        );\\n    }\\n\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            'TransferHelper::safeTransfer: transfer failed'\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            'TransferHelper::transferFrom: transferFrom failed'\\n        );\\n    }\\n\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, 'TransferHelper::safeTransferETH: ETH transfer failed');\\n    }\\n}\\n\",\"keccak256\":\"0xaff99b54915f57e2a4e71b8d15afd4ee425410e5a6f45c07517ae1beb806f8bd\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063866cb90d1161004e578063866cb90d14610118578063ac1e6b451461014c578063e3792d331461015f578063fe30ab821461017257600080fd5b80634c3677c8146100805780635de91cb6146100d15780636022cc06146100f257806376d383b814610105575b600080fd5b34801561008c57600080fd5b506100b47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e46100df366004614c43565b610185565b6040519081526020016100c8565b6100e4610100366004614c43565b611258565b6100e4610113366004614bcb565b61209f565b34801561012457600080fd5b506100b47f000000000000000000000000000000000000000000000000000000000000000081565b6100e461015a366004614c43565b612cf7565b6100e461016d366004614c43565b61345d565b6100e4610180366004614c43565b61416d565b6000808667ffffffffffffffff8111156101af57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156101d8578160200160208202803683370190505b50905060008590506000600188516101f09190615007565b90505b80156106a45787818151811061021957634e487b7160e01b600052603260045260246000fd5b6020026020010151600014156105405760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166366c0bd248c8c8581811061027a57634e487b7160e01b600052603260045260246000fd5b905060200281019061028c9190614f52565b60018181106102ab57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906102c09190614b8c565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b1580156102ff57600080fd5b505afa158015610313573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103379190614d84565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166366c0bd248d8d8681811061038a57634e487b7160e01b600052603260045260246000fd5b905060200281019061039c9190614f52565b60008181106103bb57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906103d09190614b8c565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b15801561040f57600080fd5b505afa158015610423573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104479190614d84565b60405163a95b089f60e01b815260ff808516600483015282166024820152604481018690529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a95b089f9060640160206040518083038186803b1580156104bb57600080fd5b505afa1580156104cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f39190614d6c565b935083858b51856105049190615007565b61050f906001614fef565b8151811061052d57634e487b7160e01b600052603260045260246000fd5b6020026020010181815250505050610692565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631f00ca74898d8d8681811061059257634e487b7160e01b600052603260045260246000fd5b90506020028101906105a49190614f52565b6040518463ffffffff1660e01b81526004016105c293929190614ec6565b60006040518083038186803b1580156105da57600080fd5b505afa1580156105ee573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106169190810190614cc5565b905080600182516106279190615007565b8151811061064557634e487b7160e01b600052603260045260246000fd5b6020026020010151848a518461065b9190615007565b610666906001614fef565b8151811061068457634e487b7160e01b600052603260045260246000fd5b602002602001018181525050505b8061069c81615035565b9150506101f3565b5084826000815181106106c757634e487b7160e01b600052603260045260246000fd5b602002602001015111156106f65760405162461bcd60e51b81526004016106ed90614e9a565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561074f57600080fd5b505afa158015610763573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107879190614baf565b6001600160a01b031663d0e30db0836000815181106107b657634e487b7160e01b600052603260045260246000fd5b60200260200101516040518263ffffffff1660e01b81526004016000604051808303818588803b1580156107e957600080fd5b505af11580156107fd573d6000803e3d6000fd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561085b57600080fd5b505afa15801561086f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108939190614baf565b6001600160a01b031663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846000815181106108e357634e487b7160e01b600052603260045260246000fd5b60200260200101516040518363ffffffff1660e01b8152600401610908929190614e4a565b602060405180830381600087803b15801561092257600080fd5b505af1158015610936573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095a9190614d4c565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637ff36ab560008b8b60008181106109ad57634e487b7160e01b600052603260045260246000fd5b90506020028101906109bf9190614f52565b30896040518663ffffffff1660e01b81526004016109e1959493929190614e63565b600060405180830381600087803b1580156109fb57600080fd5b505af1158015610a0f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a379190810190614cc5565b50600060018851610a489190615007565b90505b80156110ea57878181518110610a7157634e487b7160e01b600052603260045260246000fd5b602002602001015160001415610ea557898982818110610aa157634e487b7160e01b600052603260045260246000fd5b9050602002810190610ab39190614f52565b6000818110610ad257634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610ae79190614b8c565b6001600160a01b031663095ea7b37f000000000000000000000000000000000000000000000000000000000000000085600081518110610b3757634e487b7160e01b600052603260045260246000fd5b60200260200101516040518363ffffffff1660e01b8152600401610b5c929190614e4a565b602060405180830381600087803b158015610b7657600080fd5b505af1158015610b8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bae9190614d4c565b5060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166366c0bd248c8c85818110610c0057634e487b7160e01b600052603260045260246000fd5b9050602002810190610c129190614f52565b6000818110610c3157634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610c469190614b8c565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b158015610c8557600080fd5b505afa158015610c99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbd9190614d84565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166366c0bd248d8d86818110610d1057634e487b7160e01b600052603260045260246000fd5b9050602002810190610d229190614f52565b6001818110610d4157634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610d569190614b8c565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b158015610d9557600080fd5b505afa158015610da9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcd9190614d84565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663916955868383888781518110610e2057634e487b7160e01b600052603260045260246000fd5b602002602001015160008c6040518663ffffffff1660e01b8152600401610e4b959493929190614f27565b602060405180830381600087803b158015610e6557600080fd5b505af1158015610e79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9d9190614d6c565b5050506110d8565b898982818110610ec557634e487b7160e01b600052603260045260246000fd5b9050602002810190610ed79190614f52565b6000818110610ef657634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610f0b9190614b8c565b6001600160a01b031663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000858481518110610f5a57634e487b7160e01b600052603260045260246000fd5b60200260200101516040518363ffffffff1660e01b8152600401610f7f929190614e4a565b602060405180830381600087803b158015610f9957600080fd5b505af1158015610fad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd19190614d4c565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338ed173984838151811061102157634e487b7160e01b600052603260045260246000fd5b602002602001015160008d8d8681811061104b57634e487b7160e01b600052603260045260246000fd5b905060200281019061105d9190614f52565b308b6040518763ffffffff1660e01b815260040161108096959493929190614ee9565b600060405180830381600087803b15801561109a57600080fd5b505af11580156110ae573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110d69190810190614cc5565b505b806110e281615035565b915050610a4b565b5088886110f8600182615007565b81811061111557634e487b7160e01b600052603260045260246000fd5b90506020028101906111279190614f52565b60018b8b6111358382615007565b81811061115257634e487b7160e01b600052603260045260246000fd5b90506020028101906111649190614f52565b61116f929150615007565b81811061118c57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906111a19190614b8c565b6001600160a01b031663a9059cbb33886040518363ffffffff1660e01b81526004016111ce929190614e4a565b602060405180830381600087803b1580156111e857600080fd5b505af11580156111fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112209190614d4c565b508160008151811061124257634e487b7160e01b600052603260045260246000fd5b6020026020010151925050509695505050505050565b6000808667ffffffffffffffff81111561128257634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156112ab578160200160208202803683370190505b50905060008590506000600188516112c39190615007565b90505b8015611777578781815181106112ec57634e487b7160e01b600052603260045260246000fd5b6020026020010151600014156116135760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166366c0bd248c8c8581811061134d57634e487b7160e01b600052603260045260246000fd5b905060200281019061135f9190614f52565b600181811061137e57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906113939190614b8c565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b1580156113d257600080fd5b505afa1580156113e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140a9190614d84565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166366c0bd248d8d8681811061145d57634e487b7160e01b600052603260045260246000fd5b905060200281019061146f9190614f52565b600081811061148e57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906114a39190614b8c565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b1580156114e257600080fd5b505afa1580156114f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151a9190614d84565b60405163a95b089f60e01b815260ff808516600483015282166024820152604481018690529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a95b089f9060640160206040518083038186803b15801561158e57600080fd5b505afa1580156115a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c69190614d6c565b935083858b51856115d79190615007565b6115e2906001614fef565b8151811061160057634e487b7160e01b600052603260045260246000fd5b6020026020010181815250505050611765565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631f00ca74898d8d8681811061166557634e487b7160e01b600052603260045260246000fd5b90506020028101906116779190614f52565b6040518463ffffffff1660e01b815260040161169593929190614ec6565b60006040518083038186803b1580156116ad57600080fd5b505afa1580156116c1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116e99190810190614cc5565b905080600182516116fa9190615007565b8151811061171857634e487b7160e01b600052603260045260246000fd5b6020026020010151848a518461172e9190615007565b611739906001614fef565b8151811061175757634e487b7160e01b600052603260045260246000fd5b602002602001018181525050505b8061176f81615035565b9150506112c6565b50848260008151811061179a57634e487b7160e01b600052603260045260246000fd5b602002602001015111156117c05760405162461bcd60e51b81526004016106ed90614e9a565b888860008181106117e157634e487b7160e01b600052603260045260246000fd5b90506020028101906117f39190614f52565b600081811061181257634e487b7160e01b600052603260045260246000fd5b90506020020160208101906118279190614b8c565b6001600160a01b03166323b872dd33308560008151811061185857634e487b7160e01b600052603260045260246000fd5b60200260200101516040518463ffffffff1660e01b815260040161187e93929190614e26565b602060405180830381600087803b15801561189857600080fd5b505af11580156118ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d09190614d4c565b506000600188516118e19190615007565b90505b8015611f835787818151811061190a57634e487b7160e01b600052603260045260246000fd5b602002602001015160001415611d3e5789898281811061193a57634e487b7160e01b600052603260045260246000fd5b905060200281019061194c9190614f52565b600081811061196b57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906119809190614b8c565b6001600160a01b031663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000856000815181106119d057634e487b7160e01b600052603260045260246000fd5b60200260200101516040518363ffffffff1660e01b81526004016119f5929190614e4a565b602060405180830381600087803b158015611a0f57600080fd5b505af1158015611a23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a479190614d4c565b5060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166366c0bd248c8c85818110611a9957634e487b7160e01b600052603260045260246000fd5b9050602002810190611aab9190614f52565b6000818110611aca57634e487b7160e01b600052603260045260246000fd5b9050602002016020810190611adf9190614b8c565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b158015611b1e57600080fd5b505afa158015611b32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b569190614d84565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166366c0bd248d8d86818110611ba957634e487b7160e01b600052603260045260246000fd5b9050602002810190611bbb9190614f52565b6001818110611bda57634e487b7160e01b600052603260045260246000fd5b9050602002016020810190611bef9190614b8c565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b158015611c2e57600080fd5b505afa158015611c42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c669190614d84565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663916955868383888781518110611cb957634e487b7160e01b600052603260045260246000fd5b602002602001015160008c6040518663ffffffff1660e01b8152600401611ce4959493929190614f27565b602060405180830381600087803b158015611cfe57600080fd5b505af1158015611d12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d369190614d6c565b505050611f71565b898982818110611d5e57634e487b7160e01b600052603260045260246000fd5b9050602002810190611d709190614f52565b6000818110611d8f57634e487b7160e01b600052603260045260246000fd5b9050602002016020810190611da49190614b8c565b6001600160a01b031663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000858481518110611df357634e487b7160e01b600052603260045260246000fd5b60200260200101516040518363ffffffff1660e01b8152600401611e18929190614e4a565b602060405180830381600087803b158015611e3257600080fd5b505af1158015611e46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e6a9190614d4c565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338ed1739848381518110611eba57634e487b7160e01b600052603260045260246000fd5b602002602001015160008d8d86818110611ee457634e487b7160e01b600052603260045260246000fd5b9050602002810190611ef69190614f52565b308b6040518763ffffffff1660e01b8152600401611f1996959493929190614ee9565b600060405180830381600087803b158015611f3357600080fd5b505af1158015611f47573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611f6f9190810190614cc5565b505b80611f7b81615035565b9150506118e4565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b158015611fdd57600080fd5b505afa158015611ff1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120159190614baf565b6001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040161204291815260200190565b600060405180830381600087803b15801561205c57600080fd5b505af1158015612070573d6000803e3d6000fd5b5050505061207e33826149f4565b8160008151811061124257634e487b7160e01b600052603260045260246000fd5b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d06ca61f34898960008181106120f357634e487b7160e01b600052603260045260246000fd5b90506020028101906121059190614f52565b6040518463ffffffff1660e01b815260040161212393929190614ec6565b60006040518083038186803b15801561213b57600080fd5b505afa15801561214f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526121779190810190614cc5565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156121d257600080fd5b505afa1580156121e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061220a9190614baf565b6001600160a01b031663d0e30db08260008151811061223957634e487b7160e01b600052603260045260246000fd5b60200260200101516040518263ffffffff1660e01b81526004016000604051808303818588803b15801561226c57600080fd5b505af1158015612280573d6000803e3d6000fd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156122de57600080fd5b505afa1580156122f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123169190614baf565b6001600160a01b031663095ea7b37f00000000000000000000000000000000000000000000000000000000000000008360008151811061236657634e487b7160e01b600052603260045260246000fd5b60200260200101516040518363ffffffff1660e01b815260040161238b929190614e4a565b602060405180830381600087803b1580156123a557600080fd5b505af11580156123b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123dd9190614d4c565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338ed17398260008151811061242e57634e487b7160e01b600052603260045260246000fd5b602002602001015160008a8a600081811061245957634e487b7160e01b600052603260045260246000fd5b905060200281019061246b9190614f52565b30896040518763ffffffff1660e01b815260040161248e96959493929190614ee9565b600060405180830381600087803b1580156124a857600080fd5b505af11580156124bc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526124e49190810190614cc5565b9050600081600183516124f79190615007565b8151811061251557634e487b7160e01b600052603260045260246000fd5b602002602001015190506000600190505b86518160ff161015612bb557868160ff168151811061255557634e487b7160e01b600052603260045260246000fd5b6020026020010151600014156129625788888260ff1681811061258857634e487b7160e01b600052603260045260246000fd5b905060200281019061259a9190614f52565b60008181106125b957634e487b7160e01b600052603260045260246000fd5b90506020020160208101906125ce9190614b8c565b6001600160a01b031663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b815260040161261b929190614e4a565b602060405180830381600087803b15801561263557600080fd5b505af1158015612649573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061266d9190614d4c565b5060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166366c0bd248b8b8560ff168181106126c257634e487b7160e01b600052603260045260246000fd5b90506020028101906126d49190614f52565b60008181106126f357634e487b7160e01b600052603260045260246000fd5b90506020020160208101906127089190614b8c565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b15801561274757600080fd5b505afa15801561275b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061277f9190614d84565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166366c0bd248c8c8660ff168181106127d557634e487b7160e01b600052603260045260246000fd5b90506020028101906127e79190614f52565b600181811061280657634e487b7160e01b600052603260045260246000fd5b905060200201602081019061281b9190614b8c565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b15801561285a57600080fd5b505afa15801561286e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128929190614d84565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639169558683838760018e516128d49190615007565b8860ff16106128e3578c6128e6565b60005b8c6040518663ffffffff1660e01b8152600401612907959493929190614f27565b602060405180830381600087803b15801561292157600080fd5b505af1158015612935573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129599190614d6c565b93505050612ba3565b88888260ff1681811061298557634e487b7160e01b600052603260045260246000fd5b90506020028101906129979190614f52565b60008181106129b657634e487b7160e01b600052603260045260246000fd5b90506020020160208101906129cb9190614b8c565b6001600160a01b031663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b8152600401612a18929190614e4a565b602060405180830381600087803b158015612a3257600080fd5b505af1158015612a46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a6a9190614d4c565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338ed17398360018a51612aa99190615007565b8460ff1610612ab85788612abb565b60005b8c8c8660ff16818110612ade57634e487b7160e01b600052603260045260246000fd5b9050602002810190612af09190614f52565b308b6040518763ffffffff1660e01b8152600401612b1396959493929190614ee9565b600060405180830381600087803b158015612b2d57600080fd5b505af1158015612b41573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612b699190810190614cc5565b92508260018451612b7a9190615007565b81518110612b9857634e487b7160e01b600052603260045260246000fd5b602002602001015191505b80612bad81615050565b915050612526565b508787612bc3600182615007565b818110612be057634e487b7160e01b600052603260045260246000fd5b9050602002810190612bf29190614f52565b60018a8a612c008382615007565b818110612c1d57634e487b7160e01b600052603260045260246000fd5b9050602002810190612c2f9190614f52565b612c3a929150615007565b818110612c5757634e487b7160e01b600052603260045260246000fd5b9050602002016020810190612c6c9190614b8c565b6001600160a01b031663a9059cbb33836040518363ffffffff1660e01b8152600401612c99929190614e4a565b602060405180830381600087803b158015612cb357600080fd5b505af1158015612cc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ceb9190614d4c565b50979650505050505050565b600086866000818110612d1a57634e487b7160e01b600052603260045260246000fd5b9050602002810190612d2c9190614f52565b6000818110612d4b57634e487b7160e01b600052603260045260246000fd5b9050602002016020810190612d609190614b8c565b6001600160a01b03166323b872dd3330876040518463ffffffff1660e01b8152600401612d8f93929190614e26565b602060405180830381600087803b158015612da957600080fd5b505af1158015612dbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612de19190614d4c565b508360005b8651811015612bb557868181518110612e0f57634e487b7160e01b600052603260045260246000fd5b60200260200101516000141561321057888882818110612e3f57634e487b7160e01b600052603260045260246000fd5b9050602002810190612e519190614f52565b6000818110612e7057634e487b7160e01b600052603260045260246000fd5b9050602002016020810190612e859190614b8c565b6001600160a01b031663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b8152600401612ed2929190614e4a565b602060405180830381600087803b158015612eec57600080fd5b505af1158015612f00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f249190614d4c565b5060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166366c0bd248b8b85818110612f7657634e487b7160e01b600052603260045260246000fd5b9050602002810190612f889190614f52565b6000818110612fa757634e487b7160e01b600052603260045260246000fd5b9050602002016020810190612fbc9190614b8c565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b158015612ffb57600080fd5b505afa15801561300f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130339190614d84565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166366c0bd248c8c8681811061308657634e487b7160e01b600052603260045260246000fd5b90506020028101906130989190614f52565b60018181106130b757634e487b7160e01b600052603260045260246000fd5b90506020020160208101906130cc9190614b8c565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b15801561310b57600080fd5b505afa15801561311f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131439190614d84565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639169558683838760018e516131859190615007565b8810613191578b613194565b60005b8b6040518663ffffffff1660e01b81526004016131b5959493929190614f27565b602060405180830381600087803b1580156131cf57600080fd5b505af11580156131e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132079190614d6c565b9350505061344b565b88888281811061323057634e487b7160e01b600052603260045260246000fd5b90506020028101906132429190614f52565b600081811061326157634e487b7160e01b600052603260045260246000fd5b90506020020160208101906132769190614b8c565b6001600160a01b031663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b81526004016132c3929190614e4a565b602060405180830381600087803b1580156132dd57600080fd5b505af11580156132f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133159190614d4c565b5060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338ed17398460018b516133569190615007565b85106133625788613365565b60005b8d8d8781811061338557634e487b7160e01b600052603260045260246000fd5b90506020028101906133979190614f52565b308b6040518763ffffffff1660e01b81526004016133ba96959493929190614ee9565b600060405180830381600087803b1580156133d457600080fd5b505af11580156133e8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526134109190810190614cc5565b905080600182516134219190615007565b8151811061343f57634e487b7160e01b600052603260045260246000fd5b60200260200101519250505b8061345581615035565b915050612de6565b6000808667ffffffffffffffff81111561348757634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156134b0578160200160208202803683370190505b50865190915085905b801561396e57876134cb600183615007565b815181106134e957634e487b7160e01b600052603260045260246000fd5b6020026020010151600014156138175760006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166366c0bd248c8c613537600187615007565b81811061355457634e487b7160e01b600052603260045260246000fd5b90506020028101906135669190614f52565b600181811061358557634e487b7160e01b600052603260045260246000fd5b905060200201602081019061359a9190614b8c565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b1580156135d957600080fd5b505afa1580156135ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136119190614d84565b905060006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166366c0bd248d8d613651600188615007565b81811061366e57634e487b7160e01b600052603260045260246000fd5b90506020028101906136809190614f52565b600081811061369f57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906136b49190614b8c565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b1580156136f357600080fd5b505afa158015613707573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061372b9190614d84565b60405163a95b089f60e01b815260ff808516600483015282166024820152604481018690529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a95b089f9060640160206040518083038186803b15801561379f57600080fd5b505afa1580156137b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137d79190614d6c565b935083856137e6600186615007565b8151811061380457634e487b7160e01b600052603260045260246000fd5b602002602001018181525050505061395c565b60006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016631f00ca74848d8d613856600188615007565b81811061387357634e487b7160e01b600052603260045260246000fd5b90506020028101906138859190614f52565b6040518463ffffffff1660e01b81526004016138a393929190614ec6565b60006040518083038186803b1580156138bb57600080fd5b505afa1580156138cf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526138f79190810190614cc5565b90508060008151811061391a57634e487b7160e01b600052603260045260246000fd5b6020026020010151846001846139309190615007565b8151811061394e57634e487b7160e01b600052603260045260246000fd5b602002602001018181525050505b806139668161501e565b9150506134b9565b50848260008151811061399157634e487b7160e01b600052603260045260246000fd5b602002602001015111156139b75760405162461bcd60e51b81526004016106ed90614e9a565b888860008181106139d857634e487b7160e01b600052603260045260246000fd5b90506020028101906139ea9190614f52565b6000818110613a0957634e487b7160e01b600052603260045260246000fd5b9050602002016020810190613a1e9190614b8c565b6001600160a01b03166323b872dd333085600081518110613a4f57634e487b7160e01b600052603260045260246000fd5b60200260200101516040518463ffffffff1660e01b8152600401613a7593929190614e26565b602060405180830381600087803b158015613a8f57600080fd5b505af1158015613aa3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ac79190614d4c565b5060005b87518110156110ea57878181518110613af457634e487b7160e01b600052603260045260246000fd5b602002602001015160001415613f2857898982818110613b2457634e487b7160e01b600052603260045260246000fd5b9050602002810190613b369190614f52565b6000818110613b5557634e487b7160e01b600052603260045260246000fd5b9050602002016020810190613b6a9190614b8c565b6001600160a01b031663095ea7b37f000000000000000000000000000000000000000000000000000000000000000085600081518110613bba57634e487b7160e01b600052603260045260246000fd5b60200260200101516040518363ffffffff1660e01b8152600401613bdf929190614e4a565b602060405180830381600087803b158015613bf957600080fd5b505af1158015613c0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c319190614d4c565b5060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166366c0bd248c8c85818110613c8357634e487b7160e01b600052603260045260246000fd5b9050602002810190613c959190614f52565b6000818110613cb457634e487b7160e01b600052603260045260246000fd5b9050602002016020810190613cc99190614b8c565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b158015613d0857600080fd5b505afa158015613d1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d409190614d84565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166366c0bd248d8d86818110613d9357634e487b7160e01b600052603260045260246000fd5b9050602002810190613da59190614f52565b6001818110613dc457634e487b7160e01b600052603260045260246000fd5b9050602002016020810190613dd99190614b8c565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b158015613e1857600080fd5b505afa158015613e2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613e509190614d84565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663916955868383888781518110613ea357634e487b7160e01b600052603260045260246000fd5b602002602001015160008c6040518663ffffffff1660e01b8152600401613ece959493929190614f27565b602060405180830381600087803b158015613ee857600080fd5b505af1158015613efc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f209190614d6c565b50505061415b565b898982818110613f4857634e487b7160e01b600052603260045260246000fd5b9050602002810190613f5a9190614f52565b6000818110613f7957634e487b7160e01b600052603260045260246000fd5b9050602002016020810190613f8e9190614b8c565b6001600160a01b031663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000858481518110613fdd57634e487b7160e01b600052603260045260246000fd5b60200260200101516040518363ffffffff1660e01b8152600401614002929190614e4a565b602060405180830381600087803b15801561401c57600080fd5b505af1158015614030573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140549190614d4c565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338ed17398483815181106140a457634e487b7160e01b600052603260045260246000fd5b602002602001015160008d8d868181106140ce57634e487b7160e01b600052603260045260246000fd5b90506020028101906140e09190614f52565b308b6040518763ffffffff1660e01b815260040161410396959493929190614ee9565b600060405180830381600087803b15801561411d57600080fd5b505af1158015614131573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526141599190810190614cc5565b505b8061416581615035565b915050613acb565b60008686600081811061419057634e487b7160e01b600052603260045260246000fd5b90506020028101906141a29190614f52565b60008181106141c157634e487b7160e01b600052603260045260246000fd5b90506020020160208101906141d69190614b8c565b6001600160a01b03166323b872dd3330876040518463ffffffff1660e01b815260040161420593929190614e26565b602060405180830381600087803b15801561421f57600080fd5b505af1158015614233573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142579190614d4c565b508360005b86518160ff1610156148ee57868160ff168151811061428b57634e487b7160e01b600052603260045260246000fd5b6020026020010151600014156146985788888260ff168181106142be57634e487b7160e01b600052603260045260246000fd5b90506020028101906142d09190614f52565b60008181106142ef57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906143049190614b8c565b6001600160a01b031663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b8152600401614351929190614e4a565b602060405180830381600087803b15801561436b57600080fd5b505af115801561437f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143a39190614d4c565b5060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166366c0bd248b8b8560ff168181106143f857634e487b7160e01b600052603260045260246000fd5b905060200281019061440a9190614f52565b600081811061442957634e487b7160e01b600052603260045260246000fd5b905060200201602081019061443e9190614b8c565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b15801561447d57600080fd5b505afa158015614491573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144b59190614d84565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166366c0bd248c8c8660ff1681811061450b57634e487b7160e01b600052603260045260246000fd5b905060200281019061451d9190614f52565b600181811061453c57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906145519190614b8c565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b15801561459057600080fd5b505afa1580156145a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145c89190614d84565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639169558683838760018e5161460a9190615007565b8860ff1610614619578b61461c565b60005b8b6040518663ffffffff1660e01b815260040161463d959493929190614f27565b602060405180830381600087803b15801561465757600080fd5b505af115801561466b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061468f9190614d6c565b935050506148dc565b88888260ff168181106146bb57634e487b7160e01b600052603260045260246000fd5b90506020028101906146cd9190614f52565b60008181106146ec57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906147019190614b8c565b6001600160a01b031663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b815260040161474e929190614e4a565b602060405180830381600087803b15801561476857600080fd5b505af115801561477c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906147a09190614d4c565b5060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338ed17398460018b516147e19190615007565b8560ff16106147f057886147f3565b60005b8d8d8760ff1681811061481657634e487b7160e01b600052603260045260246000fd5b90506020028101906148289190614f52565b308b6040518763ffffffff1660e01b815260040161484b96959493929190614ee9565b600060405180830381600087803b15801561486557600080fd5b505af1158015614879573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526148a19190810190614cc5565b905080600182516148b29190615007565b815181106148d057634e487b7160e01b600052603260045260246000fd5b60200260200101519250505b806148e681615050565b91505061425c565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561494857600080fd5b505afa15801561495c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906149809190614baf565b6001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b81526004016149ad91815260200190565b600060405180830381600087803b1580156149c757600080fd5b505af11580156149db573d6000803e3d6000fd5b505050506149e933826149f4565b979650505050505050565b604080516000808252602082019092526001600160a01b038416908390604051614a1e9190614ded565b60006040518083038185875af1925050503d8060008114614a5b576040519150601f19603f3d011682016040523d82523d6000602084013e614a60565b606091505b5050905080614ace5760405162461bcd60e51b815260206004820152603460248201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60448201527308115512081d1c985b9cd9995c8819985a5b195960621b60648201526084016106ed565b505050565b60008083601f840112614ae4578182fd5b50813567ffffffffffffffff811115614afb578182fd5b6020830191508360208260051b8501011115614b1657600080fd5b9250929050565b600082601f830112614b2d578081fd5b81356020614b42614b3d83614fcb565b614f9a565b80838252828201915082860187848660051b8901011115614b61578586fd5b855b85811015614b7f57813584529284019290840190600101614b63565b5090979650505050505050565b600060208284031215614b9d578081fd5b8135614ba88161509c565b9392505050565b600060208284031215614bc0578081fd5b8151614ba88161509c565b600080600080600060808688031215614be2578081fd5b853567ffffffffffffffff80821115614bf9578283fd5b614c0589838a01614ad3565b90975095506020880135915080821115614c1d578283fd5b50614c2a88828901614b1d565b9598949750949560408101359550606001359392505050565b60008060008060008060a08789031215614c5b578081fd5b863567ffffffffffffffff80821115614c72578283fd5b614c7e8a838b01614ad3565b90985096506020890135915080821115614c96578283fd5b50614ca389828a01614b1d565b9450506040870135925060608701359150608087013590509295509295509295565b60006020808385031215614cd7578182fd5b825167ffffffffffffffff811115614ced578283fd5b8301601f81018513614cfd578283fd5b8051614d0b614b3d82614fcb565b80828252848201915084840188868560051b8701011115614d2a578687fd5b8694505b83851015612ceb578051835260019490940193918501918501614d2e565b600060208284031215614d5d578081fd5b81518015158114614ba8578182fd5b600060208284031215614d7d578081fd5b5051919050565b600060208284031215614d95578081fd5b815160ff81168114614ba8578182fd5b81835260006020808501945082825b85811015614de2578135614dc78161509c565b6001600160a01b031687529582019590820190600101614db4565b509495945050505050565b60008251815b81811015614e0d5760208186018101518583015201614df3565b81811115614e1b5782828501525b509190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b858152608060208201526000614e7d608083018688614da5565b6001600160a01b0394909416604083015250606001529392505050565b602080825260129082015271125394d551919250d251539517d25394155560721b604082015260600190565b838152604060208201526000614ee0604083018486614da5565b95945050505050565b86815285602082015260a060408201526000614f0960a083018688614da5565b6001600160a01b039490941660608301525060800152949350505050565b60ff958616815293909416602084015260408301919091526060820152608081019190915260a00190565b6000808335601e19843603018112614f68578283fd5b83018035915067ffffffffffffffff821115614f82578283fd5b6020019150600581901b3603821315614b1657600080fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715614fc357614fc3615086565b604052919050565b600067ffffffffffffffff821115614fe557614fe5615086565b5060051b60200190565b6000821982111561500257615002615070565b500190565b60008282101561501957615019615070565b500390565b60008161502d5761502d615070565b506000190190565b600060001982141561504957615049615070565b5060010190565b600060ff821660ff81141561506757615067615070565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146150b157600080fd5b5056fea26469706673582212200689d74f8797c7baddc0dc0b4966104761228a86b491f9aa048837f529a67d5b64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}