{
	"compiler": {
		"version": "0.8.4+commit.c7e474f2"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "provider",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "token_amounts",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "fees",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "invariant",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "token_supply",
						"type": "uint256"
					}
				],
				"name": "AddLiquidity",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "provider",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "token_amounts",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "fees",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "token_supply",
						"type": "uint256"
					}
				],
				"name": "RemoveLiquidity",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "provider",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "token_amounts",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "fees",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "invariant",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "token_supply",
						"type": "uint256"
					}
				],
				"name": "RemoveLiquidityImbalance",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "provider",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "token_amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "coin_amount",
						"type": "uint256"
					}
				],
				"name": "RemoveLiquidityOne",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "buyer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "sold_id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokens_sold",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "bought_id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokens_bought",
						"type": "uint256"
					}
				],
				"name": "TokenExchange",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "A_PRECISION",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "FEE_DENOMINATOR",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "POOL_TOKEN_COMMON_DECIMALS",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"addLiquidity(RequiemStableSwapLib.SwapStorage storage,uint256[],uint256)": {
					"params": {
						"amounts": "List of amounts of coins to deposit",
						"minMintAmount": "Minimum amount of LP tokens to mint from the deposit"
					},
					"returns": {
						"mintAmount": "Amount of LP tokens received by depositing"
					}
				},
				"updateUserWithdrawFee(RequiemStableSwapLib.SwapStorage storage,address,uint256)": {
					"params": {
						"self": "Swap struct to read from and write to",
						"toMint": "amount of pool tokens to be minted",
						"user": "address of the user depositing tokens"
					}
				}
			},
			"stateVariables": {
				"A_PRECISION": {
					"details": "protect from division loss when run approximation loop. We cannot divide at the end because of overflow, so we add some (small) PRECISION when divide in each iteration"
				},
				"MAX_ITERATION": {
					"details": "max iteration of converge calccuate"
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"addLiquidity(RequiemStableSwapLib.SwapStorage storage,uint256[],uint256)": {
					"notice": "Deposit coins into the pool"
				},
				"calculateTokenAmount(RequiemStableSwapLib.SwapStorage storage,uint256[],bool)": {
					"notice": "Estimate amount of LP token minted or burned at deposit or withdrawal without taking fees into account"
				},
				"getAPrecise(RequiemStableSwapLib.SwapStorage storage)": {
					"notice": "VIEW FUNCTIONS"
				},
				"getVirtualPrice(RequiemStableSwapLib.SwapStorage storage)": {
					"notice": "Returns portfolio virtual price (for calculating profit) scaled up by 1e18"
				},
				"updateUserWithdrawFee(RequiemStableSwapLib.SwapStorage storage,address,uint256)": {
					"notice": "Update the withdraw fee for `user`. If the user is currently not providing liquidity in the pool, sets to default value. If not, recalculate the starting withdraw fee based on the last deposit's time & amount relative to the new deposit."
				}
			},
			"notice": "StableSwap main algorithm",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"RequiemStableSwapLib.sol": "RequiemStableSwapLib"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"RequiemStableSwapLib.sol": {
			"keccak256": "0x5eeaac19a3300c035b7bb5c61f97c22d0e471267ab7aa6a973d137642b9bf885",
			"license": "MIT",
			"urls": [
				"bzz-raw://6be96aa97adcd094dec70544d6827a983ba5a0de8de72b8570770b4d275805c5",
				"dweb:/ipfs/QmWKNEkM7EHJAZDgC51DzKTdFfGJRCXD31dxnqXRBmKexJ"
			]
		},
		"interfaces/IERC20.sol": {
			"keccak256": "0xb55c91551ef864f86edd296378fc3430f19798c0d1de468ff772a83a842df24c",
			"license": "MIT",
			"urls": [
				"bzz-raw://f118e5d475795b9e612bb6c139db18493e65f47f181ddcef446f4fa43e7f80f5",
				"dweb:/ipfs/QmSRWmUWxpjp8jMtDHqWysWbZqFNVKAyLHcmBtjJRvmoLF"
			]
		},
		"interfaces/IERC20Metadata.sol": {
			"keccak256": "0x4065401847859fdea8270079da0d5d94d4d6bcb16b83753f25d77c03bc9fa66d",
			"license": "MIT",
			"urls": [
				"bzz-raw://ddc99a4763150db86205a0b0313dda9db3b4c1cc283933cb9228d63ea71a7495",
				"dweb:/ipfs/QmaVKXyFDwYPZ1iRrjAEbbaFYWSfrYdz4jfaeFJ7EWzT6k"
			]
		},
		"interfaces/IRequiemStableSwap.sol": {
			"keccak256": "0x121eb6c1c2b8664595b880ebaa7096caf3a4883d65ef8a06a1eee63f83e7a032",
			"license": "MIT",
			"urls": [
				"bzz-raw://204a624994a65d016cc558c5490800af619f54f5556f239771f854ffdb671bec",
				"dweb:/ipfs/QmZn2FBZY3fMSFeDgEJeNZ4FLcy83vyWtAfajegiUts9Fr"
			]
		},
		"libraries/Address.sol": {
			"keccak256": "0xc1202fa69783cb3ea0d87f178cab5e1f3a77de7fc0dff3c47f668f3cd65d9273",
			"license": "MIT",
			"urls": [
				"bzz-raw://ea8da5de19a08cffb966c1ea9925cd263470a91a65c5cdca9cbc8dfb669dd775",
				"dweb:/ipfs/QmeeDjQ1dPUmQ9CuU77tEYghszLVagP1xoraQJAQJF7Mm3"
			]
		},
		"libraries/Context.sol": {
			"keccak256": "0x45cb9d70dc84e6f4ec8202a58599a881421174348e0fd4400a99a22678aa7913",
			"license": "MIT",
			"urls": [
				"bzz-raw://640ea1ba9707020a73d52eb62afcc682aa0a502e61378ff2e3ed7be701afcaaf",
				"dweb:/ipfs/QmPup8KPcQQXcz4qz9r1G4ks7bv8jLqrcWNruZyXTto6qy"
			]
		},
		"libraries/ERC20.sol": {
			"keccak256": "0xce7fe9653f501bb602a1dc5af2f882952472d43e6e41ce2391d6466d9d830d5b",
			"license": "MIT",
			"urls": [
				"bzz-raw://f901f82b8378aad97befa162b36427068f05569d4487888fff3fe2d0a88b24a5",
				"dweb:/ipfs/QmTR4Rn41aSzRugq2urskEGYwrutN2tNJ5a1aUPTY3f4Sq"
			]
		},
		"libraries/ERC20Burnable.sol": {
			"keccak256": "0x38590e23866a35612fb37c8682272b21fded3c9c286ab5ed3f2cb78329c025ed",
			"license": "MIT",
			"urls": [
				"bzz-raw://0daa7cee4576cf4bbe718a0b9321206b1828da9c3bd4deb202e8accab930502e",
				"dweb:/ipfs/QmVrwAqTUWyLVK5dZhynK1yTcsMNbsh1XG5qncy45dmmXF"
			]
		},
		"libraries/Ownable.sol": {
			"keccak256": "0xebc779eef137e493b8c2a11fa304d5ed6b62726ae1b6c3c71d5ce2fbb9da42d8",
			"license": "MIT",
			"urls": [
				"bzz-raw://cc43e60cfadfdd0e011f63460a9ae19f3a2835ea61c8517d920f570f27ed3589",
				"dweb:/ipfs/QmboVxHa2ptKLp2RxPoGnB5z5zwKgQvjK7fwKEL6BAJkmD"
			]
		},
		"libraries/SafeERC20.sol": {
			"keccak256": "0x3ed129ce99188978b1768041fbbaa51cb5c850113c7f33ccc43d19ce524c9dbe",
			"license": "MIT",
			"urls": [
				"bzz-raw://9128909b397a9d4db55b73b4e73a281f0c49fdcd589cdf0621add4dafbc7f9b9",
				"dweb:/ipfs/QmdJyYDaLJSRAXRhxDZacabsLNLJRiytHkvnMdtR87pfHf"
			]
		},
		"tokens/LPToken.sol": {
			"keccak256": "0x1eca33dbd98dab6ec7336d1f3a723a59a1fb337954a57c881639898a67a74fbe",
			"license": "MIT",
			"urls": [
				"bzz-raw://1240d04e8f67077585f248d234b739a171f43a0220ae792931acc97b00550582",
				"dweb:/ipfs/QmavedfdZuGAQnyQZDPyPYBVtEaTtniCVZ9TwQF95cCfda"
			]
		}
	},
	"version": 1
}